---
import '../../styles/global.css';
const today = new Date();
const dateFmt = today.toLocaleDateString(undefined, { weekday: 'long', month: 'long', day: 'numeric' });
---
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Daily Check-in • SoulLog</title>
</head>
<body class="min-h-screen flex flex-col">
  <header class="flex items-center justify-between px-4 py-3">
    <button class="w-9 h-9 flex items-center justify-center rounded-full hover:bg-sand-100" aria-label="Back">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="w-5 h-5"><path fill="currentColor" d="M15.5 19.5 8 12l7.5-7.5"/></svg>
    </button>
    <h1 class="text-2xl font-bold text-[color:var(--ink)]">Daily Check-in</h1>
    <a href="/app/journal" class="w-9 h-9 flex items-center justify-center rounded-full bg-white border">
      <svg viewBox="0 0 24 24" class="w-5 h-5"><path fill="currentColor" d="M12 12a5 5 0 1 0-5-5 5 5 0 0 0 5 5Zm0 2c-5.33 0-8 2.67-8 5v1h16v-1c0-2.33-2.67-5-8-5Z"/></svg>
    </a>
  </header>

  <main class="px-4 pb-28 space-y-8">
    <section class="space-y-1">
      <h2 class="text-xl font-bold text-[color:var(--ink)]">How are you feeling today?</h2>
      <div class="text-sm text-[color:var(--ink)] opacity-80">{dateFmt}</div>
    </section>

    <section class="card p-4 space-y-4">
      <div class="flex justify-between text-2xl">
        <span id="e1">😢</span><span id="e2">😟</span><span id="e3">😐</span><span id="e4">🙂</span><span id="e5">😄</span>
      </div>
      <div class="relative pt-4">
        <input id="mood" type="range" min="1" max="5" step="1" class="w-full appearance-none bg-sand-300 rounded-full h-2 accent-[var(--sage)]" value="2" />
        <div id="mood-label" class="absolute -top-6 left-1/2 -translate-x-1/2 text-sm font-semibold text-[color:var(--ink)]">Anxious</div>
      </div>
    </section>

    <section class="space-y-2">
      <div class="text-sm font-semibold text-[color:var(--ink)]">Add more specific feelings?</div>
      <div id="tags" class="flex flex-wrap gap-2"></div>
    </section>

    <section class="space-y-2">
      <h3 class="text-xl font-bold text-[color:var(--ink)]">What's on your mind?</h3>
      <div class="relative">
        <textarea id="journal" class="w-full h-40 p-4 rounded-2xl border border-sand-300 bg-sand-50 placeholder-slate-400"
          placeholder="I'm feeling anxious because I have a big presentation tomorrow and I keep thinking about everything that could go wrong..."></textarea>
        <button id="mic" class="absolute bottom-3 right-3 w-10 h-10 rounded-full flex items-center justify-center text-white" style="background-color: var(--sage)" aria-label="Voice input">
          <svg viewBox="0 0 24 24" class="w-5 h-5"><path fill="currentColor" d="M12 14a3 3 0 0 0 3-3V6a3 3 0 0 0-6 0v5a3 3 0 0 0 3 3Zm5-3a5 5 0 0 1-10 0H5a7 7 0 0 0 14 0Z"/></svg>
        </button>
      </div>
    </section>

    <section>
      <button id="save" class="w-full py-4 rounded-2xl text-white font-semibold" style="background-color: var(--sage)">Log Entry</button>
      <div id="status" class="text-sm mt-2 opacity-80"></div>
    </section>
  </main>

  <nav class="fixed bottom-0 left-0 right-0 bg-white border-t">
    <div class="max-w-2xl mx-auto px-6 py-2 grid grid-cols-4 text-center text-xs">
      <a href="/app/checkin" class="flex flex-col items-center text-[color:var(--sage)]">
        <svg viewBox="0 0 24 24" class="w-6 h-6"><path fill="currentColor" d="M12 3 3 10h2v10h5v-6h4v6h5V10h2Z"/></svg>
        <span>Home</span>
      </a>
      <a href="/app/learn" class="flex flex-col items-center text-slate-300">
        <svg viewBox="0 0 24 24" class="w-6 h-6"><path fill="currentColor" d="M12 3 1 9l11 6 9-4.91V17h2V9L12 3Z"/></svg>
        <span>Learn</span>
      </a>
      <a href="/app/exercises" class="flex flex-col items-center text-slate-300">
        <svg viewBox="0 0 24 24" class="w-6 h-6"><path fill="currentColor" d="M7 7h10v2H7Zm0 4h10v2H7Zm0 4h7v2H7Z"/></svg>
        <span>Exercises</span>
      </a>
      <a href="/app/progress" class="flex flex-col items-center text-slate-300">
        <svg viewBox="0 0 24 24" class="w-6 h-6"><path fill="currentColor" d="M3 3h2v18H3Zm4 10h2v8H7Zm4-6h2v14h-2Zm4 4h2v10h-2Zm4-2h2v12h-2Z"/></svg>
        <span>Progress</span>
      </a>
    </div>
  </nav>

  <script type="module">
    import { supabase } from '/src/lib/supabaseClient.ts'
    import { deriveRootKey, generateDEK, encryptJSON, wrapDEK } from '/src/lib/crypto/e2ee.ts'
    import { getOrCreateSalt } from '/src/lib/crypto/storage.ts'

    const { data: session } = await supabase.auth.getSession();
    if (!session.session) location.href = '/auth/login';

    const tagData = [
      { label: 'Stressed', selected: true },
      { label: 'Overwhelmed', selected: true },
      { label: 'Tired', selected: false },
      { label: 'Hopeful', selected: false },
      { label: 'Grateful', selected: false },
      { label: 'Irritated', selected: false },
      { label: 'Productive', selected: false }
    ];
    const tagsEl = document.getElementById('tags');
    function renderTags(){
      tagsEl.innerHTML='';
      for (const t of tagData){
        const b=document.createElement('button'); b.textContent=t.label;
        b.className='px-3 py-2 rounded-full text-sm border';
        if (t.selected){ b.style.backgroundColor='#8C6C82'; b.style.color='#FFFFFF'; b.style.borderColor='#8C6C82'; }
        else { b.style.backgroundColor='#E0E0E0'; b.style.color='#3A3A3A'; b.style.borderColor='#E0E0E0'; }
        b.onclick=()=>{ t.selected=!t.selected; renderTags(); };
        tagsEl.appendChild(b);
      }
    }
    renderTags();

    const moodInput = document.getElementById('mood');
    const moodLabel = document.getElementById('mood-label');
    const emojiMap = {1:{el:document.getElementById('e1'),text:'Sad'},2:{el:document.getElementById('e2'),text:'Anxious'},3:{el:document.getElementById('e3'),text:'Neutral'},4:{el:document.getElementById('e4'),text:'Content'},5:{el:document.getElementById('e5'),text:'Happy'}};
    function highlight(val){ for (const k in emojiMap){ emojiMap[k].el.style.transform='scale(1)'; emojiMap[k].el.style.opacity='0.7'; } emojiMap[val].el.style.transform='scale(1.25)'; emojiMap[val].el.style.opacity='1';}
    highlight(moodInput.value);
    moodInput.addEventListener('input', ()=>{ const v=String(moodInput.value); moodLabel.textContent=emojiMap[v].text; highlight(v); });

    async function rootKey() {
      const salt = getOrCreateSalt();
      let pwd = sessionStorage.getItem('soulog_pwd');
      if (!pwd) { pwd = prompt('Enter your password to unlock encryption') || ''; sessionStorage.setItem('soulog_pwd', pwd); }
      return deriveRootKey(pwd, salt);
    }
    async function save() {
      const rk = await rootKey();
      const dek = await generateDEK();
      const body = { text: document.getElementById('journal').value, tags: tagData.filter(t=>t.selected).map(t=>t.label), mood_word: emojiMap[moodInput.value].text, created_at: new Date().toISOString() };
      const { iv, cipher } = await encryptJSON(dek, body);
      const { iv: wrapIv, wrapped } = await wrapDEK(rk, dek);
      const { error } = await supabase.from('journal_entries').insert({ mood: Number(moodInput.value), tags: body.tags, cipher, iv, dek_wrapped: wrapped, dek_wrap_iv: wrapIv });
      const status = document.getElementById('status'); if (error){ status.textContent = error.message; return; } status.textContent='Logged securely.'; document.getElementById('journal').value='';
    }
    document.getElementById('save').addEventListener('click', save);
  </script>
</body>
</html>
